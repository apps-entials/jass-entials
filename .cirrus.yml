container:
  image: cirrusci/android-sdk:34
  cpu: 4
  memory: 16G
  kvm: true

task:
  matrix:
    # add more JDK versions here
    - name: Cirrus - JDK17
      env:
        OPENJDK_VERSION: "17.0.0"
        OPENJDK_PATH: "jdk-17"

steps:
  - name: Set JAVA_HOME
    command: |
      export JAVA_HOME="/usr/local/android-sdk/openjdk/${OPENJDK_PATH}"
      echo "export JAVA_HOME=$JAVA_HOME" >> $HOME/.cirrus-ci-env
    shell: bash

  - name: Update gradle.properties
    command: echo "org.gradle.java.home=$JAVA_HOME" >> /tmp/cirrus-ci-build/gradle.properties
    shell: bash

  - name: Set Java version for Gradle wrapper
    command: ./gradlew wrapper --gradle-version 7.1 --distribution-type all --continue
    working_directory: /tmp/cirrus-ci-build

  - name: Build Debug Android Test
    command: ./gradlew assembleDebugAndroidTest
    working_directory: /tmp/cirrus-ci-build



env:
  CC_TEST_REPORTER_ID: ENCRYPTED[!942125cb3ea65a81b33ed29fae738238f9060dfe3594af3e63b76f040c72b321905507ae5822965c7b031109cf07e3c8!]

check_android_task:
  name: Run Android tests
  install_emulator_script:
    sdkmanager --install "system-images;android-30;google_apis_playstore;x86"
  create_avd_script:
    echo no | avdmanager create avd --force
    --name emulator
    --package "system-images;android-30;google_apis_playstore;x86"
  start_avd_background_script:
    $ANDROID_HOME/emulator/emulator
    -avd emulator
    -no-audio
    -no-boot-anim
    -gpu swiftshader_indirect
    -no-snapshot
    -no-window
    -camera-back none
  assemble_instrumented_tests_script: |
    chmod +x gradlew
    ./gradlew assembleDebugAndroidTest
  wait_for_avd_script:
    adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 3; done; input keyevent 82'
  disable_animations_script: |
    adb shell settings put global window_animation_scale 0.0
    adb shell settings put global transition_animation_scale 0.0
    adb shell settings put global animator_duration_scale 0.0
  prepare_codeclimate_script: |
    curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    chmod +x ./cc-test-reporter
    ./cc-test-reporter before-build
  screen_record_background_script:
    for n in $(seq 1 20); do adb exec-out screenrecord --time-limit=180 --output-format=h264 - > $n.h264; done
  check_script:
    ./gradlew check connectedCheck
  report_codeclimate_script: |
    export JACOCO_SOURCE_PATH=app/src/main/java/
    ./cc-test-reporter format-coverage ./app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml --input-type jacoco
    ./cc-test-reporter upload-coverage
  lint_script:
    ./gradlew lintDebug
  always:
    wait_for_screenrecord_script: |
      pkill -2 -x adb
      sleep 2
    screenrecord_artifacts:
      path: "*.h264"
    android_lint_artifacts:
      path: ./app/build/reports/lint-results-debug.xml
      format: android-lint
    test_artifacts:
      path: "./app/build/test-results/**/*.xml"
      format: junit
    androidtest_artifacts:
      path: "./app/build/outputs/**/*.xml"
      format: junit